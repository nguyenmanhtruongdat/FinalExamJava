/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ViewTable;

import GUI.Personnel_Manager;
import entity.Attributes;
import java.awt.Toolkit;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Truong Dat
 */
public class Search extends javax.swing.JFrame {

    /**
     * Creates new form Search
     */
    public Search() {
        initComponents();
        setLocationRelativeTo(null);
        setIconImage();
        tfSearch.setVisible(false);
        comboxDepart1.setVisible(false);
        comboxGender1.setVisible(false);
        comboxCountry1.setVisible(false);
        comboxPosition1.setVisible(false);
        jDayChooser1.setVisible(false);
        jMonthChooser1.setVisible(false);
        jYearChooser1.setVisible(false);
    }

    private void setIconImage() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("search_icon.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnSearch = new javax.swing.JButton();
        comboxOption = new javax.swing.JComboBox<>();
        tfSearch = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        comboxPosition1 = new javax.swing.JComboBox<>();
        comboxGender1 = new javax.swing.JComboBox<>();
        comboxDepart1 = new javax.swing.JComboBox<>();
        jYearChooser1 = new com.toedter.calendar.JYearChooser();
        jMonthChooser1 = new com.toedter.calendar.JMonthChooser();
        jDayChooser1 = new com.toedter.components.JSpinField();
        comboxCountry1 = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Personnel_infor_table = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SEARCH");
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 0), 3));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnSearch.setBackground(new java.awt.Color(51, 255, 204));
        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ViewTable/search_icon_1.png"))); // NOI18N
        btnSearch.setText("SEARCH");
        btnSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSearch.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        jPanel1.add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 75, 120, 40));

        comboxOption.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-None-", "Name", "Gender", "Country", "Position", "Department", "Day(Birthday)", "Month(Birthday)", "Year(Birthday)", " " }));
        comboxOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboxOptionActionPerformed(evt);
            }
        });
        jPanel1.add(comboxOption, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 80, 110, 30));
        jPanel1.add(tfSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 80, 120, 30));

        jLabel1.setBackground(new java.awt.Color(51, 255, 204));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Choose something");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 80, 170, 30));

        comboxPosition1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CEO", "Manager", "Admin", "Secretary", "Employee" }));
        comboxPosition1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboxPosition1ActionPerformed(evt);
            }
        });
        jPanel1.add(comboxPosition1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 80, 120, 30));

        comboxGender1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        jPanel1.add(comboxGender1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 80, 120, 30));

        comboxDepart1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Accounting", "Marketing", "Management", "Director", "Administrative", "Business" }));
        jPanel1.add(comboxDepart1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 80, 120, 30));
        jPanel1.add(jYearChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 80, 120, 30));
        jPanel1.add(jMonthChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 80, 120, 30));

        jDayChooser1.setMaximum(31);
        jDayChooser1.setMinimum(1);
        jDayChooser1.setValue(1);
        jPanel1.add(jDayChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 80, 120, 30));

        comboxCountry1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "An Giang", "Ba Ria - Vung Tau", "Bac Giang", "Bac Kan", "Bac Lieu", "Bac Ninh", "Ben Tre", "Binh Dinh", "Binh Duong", "Binh Phuoc", "Binh Thuan", "Ca Mau", "Cao Bang", "Dak Lak", "Dak Nong", "Dien Bien", "Dong Nai", "Dong Thap", "Gia Lai", "Ha Giang", "Ha Nam", "Ha Tinh", "Hai Duong", "Hau Giang", "Hoa Binh", "Hung Yen", "Khanh Hoa", "Kien Giang", "Kon Tum", "Lai Chau", "Lam Dong", "Lang Son", "Lao Cai", "Long An", "Nam Dinh", "Nghe An", "Ninh Binh", "Ninh Thuan", "Phu Tho", "Quang Binh", "Quang Nam", "Quang Ngai", "Quang Ninh", "Quang Tri", "Soc Trang", "Son La", "Tay Ninh", "Thai Binh", "Thai Nguyen", "Thanh Hoa", "Thua Thien Hue", "Tien Giang", "Tra Vinh", "Tuyen Quang", "Vinh Long", "Vinh Phuc", "Yen Bai", "Phu Yen", "Can Tho", "Da Nang", "Hai Phong", "Ha Noi", "TP HCM" }));
        jPanel1.add(comboxCountry1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 80, 120, 30));

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 255, 51), 3));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Personnel_infor_table.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Personnel_infor_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Gender", "Dob", "Country", "Position", "Department"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Personnel_infor_table);
        if (Personnel_infor_table.getColumnModel().getColumnCount() > 0) {
            Personnel_infor_table.getColumnModel().getColumn(0).setPreferredWidth(50);
            Personnel_infor_table.getColumnModel().getColumn(4).setPreferredWidth(120);
        }

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 810, 360));

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(255, 0, 0));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ViewTable/cancel.png"))); // NOI18N
        jButton1.setText("EXIT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        loadDAO load = new loadDAO();
        List<Attributes> list;
        DefaultTableModel model;
        String option = comboxOption.getSelectedItem().toString();
        switch (option) {
            case "Name":
                String name = tfSearch.getText();
                if (name.trim().length() == 0) {
                    list = load.searchAll();
                    model = new DefaultTableModel();
                    model = (DefaultTableModel) Personnel_infor_table.getModel();
                    while (model.getRowCount() != 0) {
                        model.removeRow(0);
                    }
                    for (Attributes o : list) {
                        model.addRow(new Object[]{o.getId(), o.getName(), o.getGender(), o.getDob(), o.getCountry(), o.getPosition(), o.getDepartment()});
                    }
                } else if (name.trim().length() == 1) {
                    list = load.searchByLetter(name);
                    model = new DefaultTableModel();
                    model = (DefaultTableModel) Personnel_infor_table.getModel();
                    while (model.getRowCount() != 0) {
                        model.removeRow(0);
                    }
                    for (Attributes o : list) {
                        model.addRow(new Object[]{o.getId(), o.getName(), o.getGender(), o.getDob(), o.getCountry(), o.getPosition(), o.getDepartment()});
                    }
                } else {
                    list = load.searchByName(name);
                    model = new DefaultTableModel();
                    model = (DefaultTableModel) Personnel_infor_table.getModel();
                    while (model.getRowCount() != 0) {
                        model.removeRow(0);
                    }
                    for (Attributes o : list) {
                        model.addRow(new Object[]{o.getId(), o.getName(), o.getGender(), o.getDob(), o.getCountry(), o.getPosition(), o.getDepartment()});
                    }
                }
                break;
            case "Gender":
                String gender = comboxGender1.getSelectedItem().toString();
                list = load.searchByGender(gender);
                model = new DefaultTableModel();
                model = (DefaultTableModel) Personnel_infor_table.getModel();
                while (model.getRowCount() != 0) {
                    model.removeRow(0);
                }
                for (Attributes o : list) {
                    model.addRow(new Object[]{o.getId(), o.getName(), o.getGender(), o.getDob(), o.getCountry(), o.getPosition(), o.getDepartment()});
                }
                break;
            case "Country":
                String country = comboxCountry1.getSelectedItem().toString();
                list = load.searchByCountry(country);
                model = new DefaultTableModel();
                model = (DefaultTableModel) Personnel_infor_table.getModel();
                while (model.getRowCount() != 0) {
                    model.removeRow(0);
                }
                for (Attributes o : list) {
                    model.addRow(new Object[]{o.getId(), o.getName(), o.getGender(), o.getDob(), o.getCountry(), o.getPosition(), o.getDepartment()});
                }
                break;
//                CEO Manager
//                Admin Secretary
//                Employee
            case "Position":
                String position = comboxPosition1.getSelectedItem().toString();
                list = load.searchbyPosition(position);
                model = new DefaultTableModel();
                model = (DefaultTableModel) Personnel_infor_table.getModel();
                while (model.getRowCount() != 0) {
                    model.removeRow(0);
                }
                for (Attributes o : list) {
                    model.addRow(new Object[]{o.getId(), o.getName(), o.getGender(), o.getDob(), o.getCountry(), o.getPosition(), o.getDepartment()});
                }
                break;
            case "Year(Birthday)":
                int year = jYearChooser1.getYear();
                list = load.searchByYear(year);
                model = new DefaultTableModel();
                model = (DefaultTableModel) Personnel_infor_table.getModel();
                while (model.getRowCount() != 0) {
                    model.removeRow(0);
                }
                for (Attributes o : list) {
                    model.addRow(new Object[]{o.getId(), o.getName(), o.getGender(), o.getDob(), o.getCountry(), o.getPosition(), o.getDepartment()});
                }
                break;

        }

    }//GEN-LAST:event_btnSearchActionPerformed

    private void comboxOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboxOptionActionPerformed

        String option = comboxOption.getSelectedItem().toString();

        if (option.equals("Name")) {
            tfSearch.setVisible(true);
            comboxGender1.setVisible(false);
            comboxPosition1.setVisible(false);
            comboxDepart1.setVisible(false);
            jDayChooser1.setVisible(false);
            jMonthChooser1.setVisible(false);
            jYearChooser1.setVisible(false);

        } else if (!option.equals("Gender")) {
            tfSearch.setVisible(false);
        }

        if (option.equals("Gender")) {
            tfSearch.setVisible(false);
            comboxGender1.setVisible(true);
            comboxPosition1.setVisible(false);
            comboxDepart1.setVisible(false);
            jDayChooser1.setVisible(false);
            jMonthChooser1.setVisible(false);
            jYearChooser1.setVisible(false);

        } else if (!option.equals("Gender")) {
            comboxGender1.setVisible(false);
        }

        if (option.equals("Position")) {
            tfSearch.setVisible(false);
            comboxPosition1.setVisible(true);
            comboxGender1.setVisible(false);
            comboxDepart1.setVisible(false);
            jDayChooser1.setVisible(false);
            jMonthChooser1.setVisible(false);
            jYearChooser1.setVisible(false);
        } else if (!option.equals("Position")) {
            comboxPosition1.setVisible(false);
        }
        if (option.equals("Department")) {
            tfSearch.setVisible(false);
            comboxDepart1.setVisible(true);
            comboxGender1.setVisible(false);
            comboxCountry1.setVisible(false);
            comboxPosition1.setVisible(false);
            jDayChooser1.setVisible(false);
            jMonthChooser1.setVisible(false);
            jYearChooser1.setVisible(false);
        } else if (!option.equals("Department")) {
            comboxDepart1.setVisible(false);
        }
        if (option.equals("Country")) {
            tfSearch.setVisible(false);
            comboxDepart1.setVisible(false);
            comboxGender1.setVisible(false);
            comboxCountry1.setVisible(true);
            comboxPosition1.setVisible(false);
            jDayChooser1.setVisible(false);
            jMonthChooser1.setVisible(false);
            jYearChooser1.setVisible(false);
        } else if (!option.equals("Country")) {
            comboxCountry1.setVisible(false);
        }
        if (option.equals("Year(Birthday)")) {
            tfSearch.setVisible(false);
            comboxCountry1.setVisible(false);
            comboxDepart1.setVisible(false);
            comboxGender1.setVisible(false);
            comboxPosition1.setVisible(false);
            jYearChooser1.setVisible(true);
            jDayChooser1.setVisible(false);
            jMonthChooser1.setVisible(false);
        } else if (!option.equals("Month(Birthday)")) {
            jYearChooser1.setVisible(false);
        }

        if (option.equals("Month(Birthday)")) {
            tfSearch.setVisible(false);
            comboxCountry1.setVisible(false);
            comboxDepart1.setVisible(false);
            comboxGender1.setVisible(false);
            comboxPosition1.setVisible(false);
            jYearChooser1.setVisible(false);
            jDayChooser1.setVisible(false);
            jMonthChooser1.setVisible(true);
        } else if (!option.equals("Month(Birthday)")) {
            jMonthChooser1.setVisible(false);
        }
        if (option.equals("Day(Birthday)")) {
            tfSearch.setVisible(false);
            comboxCountry1.setVisible(false);
            comboxDepart1.setVisible(false);
            comboxGender1.setVisible(false);
            comboxPosition1.setVisible(false);
            jMonthChooser1.setVisible(false);
            jDayChooser1.setEnabled(true);
            jDayChooser1.setVisible(true);
            jYearChooser1.setVisible(false);
        } else if (!option.equals("Day(Birthday)")) {
            jDayChooser1.setVisible(false);
        }

        /*
        Name
Gender
Country
Position
Department
Day(Birthday)
Month(Birthday)
Year(Birthday)

         */

    }//GEN-LAST:event_comboxOptionActionPerformed

    private void comboxPosition1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboxPosition1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboxPosition1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Search().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Personnel_infor_table;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> comboxCountry1;
    private javax.swing.JComboBox<String> comboxDepart1;
    private javax.swing.JComboBox<String> comboxGender1;
    private javax.swing.JComboBox<String> comboxOption;
    private javax.swing.JComboBox<String> comboxPosition1;
    private javax.swing.JButton jButton1;
    private com.toedter.components.JSpinField jDayChooser1;
    private javax.swing.JLabel jLabel1;
    private com.toedter.calendar.JMonthChooser jMonthChooser1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JYearChooser jYearChooser1;
    private javax.swing.JTextField tfSearch;
    // End of variables declaration//GEN-END:variables
}
